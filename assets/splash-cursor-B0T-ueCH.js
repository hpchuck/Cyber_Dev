import{j as e}from"./animation-D1Js51r2.js";import{r as t}from"./react-vendor-C_VPrC-B.js";function r({SIM_RESOLUTION:r=128,DYE_RESOLUTION:n=1440,CAPTURE_RESOLUTION:i=512,DENSITY_DISSIPATION:o=3.5,VELOCITY_DISSIPATION:a=2,PRESSURE:u=.1,PRESSURE_ITERATIONS:c=20,CURL:l=3,SPLAT_RADIUS:f=.2,SPLAT_FORCE:v=6e3,SHADING:s=!0,COLOR_UPDATE_SPEED:m=10,BACK_COLOR:d={r:.5,g:0,b:0},TRANSPARENT:h=!0}){const T=t.useRef(null);return t.useEffect((()=>{const e=T.current;if(!e)return;let t={SIM_RESOLUTION:r,DYE_RESOLUTION:n,CAPTURE_RESOLUTION:i,DENSITY_DISSIPATION:o,VELOCITY_DISSIPATION:a,PRESSURE:u,PRESSURE_ITERATIONS:c,CURL:l,SPLAT_RADIUS:f,SPLAT_FORCE:v,SHADING:s,COLOR_UPDATE_SPEED:m,PAUSED:!1,BACK_COLOR:d,TRANSPARENT:h},E=[new function(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[0,0,0]}];const{gl:g,ext:x}=function(e){const t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let r=e.getContext("webgl2",t);const n=!!r;n||(r=e.getContext("webgl",t)||e.getContext("experimental-webgl",t));let i,o;n?(r.getExtension("EXT_color_buffer_float"),o=r.getExtension("OES_texture_float_linear")):(i=r.getExtension("OES_texture_half_float"),o=r.getExtension("OES_texture_half_float_linear"));r.clearColor(0,0,0,1);const a=n?r.HALF_FLOAT:i&&i.HALF_FLOAT_OES;let u,c,l;n?(u=R(r,r.RGBA16F,r.RGBA,a),c=R(r,r.RG16F,r.RG,a),l=R(r,r.R16F,r.RED,a)):(u=R(r,r.RGBA,r.RGBA,a),c=R(r,r.RGBA,r.RGBA,a),l=R(r,r.RGBA,r.RGBA,a));return{gl:r,ext:{formatRGBA:u,formatRG:c,formatR:l,halfFloatTexType:a,supportLinearFiltering:o}}}(e);function R(e,t,r,n){if(!function(e,t,r,n){const i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,t,4,4,0,r,n,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER);return a===e.FRAMEBUFFER_COMPLETE}(e,t,r,n))switch(t){case e.R16F:return R(e,e.RG16F,e.RG,n);case e.RG16F:return R(e,e.RGBA16F,e.RGBA,n);default:return null}return{internalFormat:t,format:r}}x.supportLinearFiltering||(t.DYE_RESOLUTION=256,t.SHADING=!1);class S{constructor(e,t){this.uniforms={},this.program=p(e,t),this.uniforms=D(this.program)}bind(){g.useProgram(this.program)}}function p(e,t){let r=g.createProgram();return g.attachShader(r,e),g.attachShader(r,t),g.linkProgram(r),g.getProgramParameter(r,g.LINK_STATUS)||console.trace(g.getProgramInfoLog(r)),r}function D(e){let t=[],r=g.getProgramParameter(e,g.ACTIVE_UNIFORMS);for(let n=0;n<r;n++){let r=g.getActiveUniform(e,n).name;t[r]=g.getUniformLocation(e,r)}return t}function A(e,t,r){t=function(e,t){if(!t)return e;let r="";return t.forEach((e=>{r+="#define "+e+"\n"})),r+e}(t,r);const n=g.createShader(e);return g.shaderSource(n,t),g.compileShader(n),g.getShaderParameter(n,g.COMPILE_STATUS)||console.trace(g.getShaderInfoLog(n)),n}const _=A(g.VERTEX_SHADER,"\n        precision highp float;\n        attribute vec2 aPosition;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform vec2 texelSize;\n\n        void main () {\n            vUv = aPosition * 0.5 + 0.5;\n            vL = vUv - vec2(texelSize.x, 0.0);\n            vR = vUv + vec2(texelSize.x, 0.0);\n            vT = vUv + vec2(0.0, texelSize.y);\n            vB = vUv - vec2(0.0, texelSize.y);\n            gl_Position = vec4(aPosition, 0.0, 1.0);\n        }\n      "),y=A(g.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n\n        void main () {\n            gl_FragColor = texture2D(uTexture, vUv);\n        }\n      "),U=A(g.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform float value;\n\n        void main () {\n            gl_FragColor = value * texture2D(uTexture, vUv);\n        }\n     "),F=A(g.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTarget;\n        uniform float aspectRatio;\n        uniform vec3 color;\n        uniform vec2 point;\n        uniform float radius;\n\n        void main () {\n            vec2 p = vUv - point.xy;\n            p.x *= aspectRatio;\n            vec3 splat = exp(-dot(p, p) / radius) * color;\n            vec3 base = texture2D(uTarget, vUv).xyz;\n            gl_FragColor = vec4(base + splat, 1.0);\n        }\n      "),L=A(g.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uSource;\n        uniform vec2 texelSize;\n        uniform vec2 dyeTexelSize;\n        uniform float dt;\n        uniform float dissipation;\n\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n            vec2 st = uv / tsize - 0.5;\n            vec2 iuv = floor(st);\n            vec2 fuv = fract(st);\n\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n        }\n\n        void main () {\n            #ifdef MANUAL_FILTERING\n                vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n                vec4 result = bilerp(uSource, coord, dyeTexelSize);\n            #else\n                vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n                vec4 result = texture2D(uSource, coord);\n            #endif\n            float decay = 1.0 + dissipation * dt;\n            gl_FragColor = result / decay;\n        }\n      ",x.supportLinearFiltering?null:["MANUAL_FILTERING"]),w=A(g.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).x;\n            float R = texture2D(uVelocity, vR).x;\n            float T = texture2D(uVelocity, vT).y;\n            float B = texture2D(uVelocity, vB).y;\n\n            vec2 C = texture2D(uVelocity, vUv).xy;\n            if (vL.x < 0.0) { L = -C.x; }\n            if (vR.x > 1.0) { R = -C.x; }\n            if (vT.y > 1.0) { T = -C.y; }\n            if (vB.y < 0.0) { B = -C.y; }\n\n            float div = 0.5 * (R - L + T - B);\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n        }\n      "),P=A(g.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).y;\n            float R = texture2D(uVelocity, vR).y;\n            float T = texture2D(uVelocity, vT).x;\n            float B = texture2D(uVelocity, vB).x;\n            float vorticity = R - L - T + B;\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n        }\n      "),b=A(g.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uCurl;\n        uniform float curl;\n        uniform float dt;\n\n        void main () {\n            float L = texture2D(uCurl, vL).x;\n            float R = texture2D(uCurl, vR).x;\n            float T = texture2D(uCurl, vT).x;\n            float B = texture2D(uCurl, vB).x;\n            float C = texture2D(uCurl, vUv).x;\n\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n            force /= length(force) + 0.0001;\n            force *= curl * C;\n            force.y *= -1.0;\n\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity += force * dt;\n            velocity = min(max(velocity, -1000.0), 1000.0);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),I=A(g.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uDivergence;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            float C = texture2D(uPressure, vUv).x;\n            float divergence = texture2D(uDivergence, vUv).x;\n            float pressure = (L + R + B + T - divergence) * 0.25;\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n        }\n      "),B=A(g.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity.xy -= vec2(R - L, T - B);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),N=(g.bindBuffer(g.ARRAY_BUFFER,g.createBuffer()),g.bufferData(g.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),g.STATIC_DRAW),g.bindBuffer(g.ELEMENT_ARRAY_BUFFER,g.createBuffer()),g.bufferData(g.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),g.STATIC_DRAW),g.vertexAttribPointer(0,2,g.FLOAT,!1,0,0),g.enableVertexAttribArray(0),(e,t=!1)=>{null==e?(g.viewport(0,0,g.drawingBufferWidth,g.drawingBufferHeight),g.bindFramebuffer(g.FRAMEBUFFER,null)):(g.viewport(0,0,e.width,e.height),g.bindFramebuffer(g.FRAMEBUFFER,e.fbo)),t&&(g.clearColor(0,0,0,1),g.clear(g.COLOR_BUFFER_BIT)),g.drawElements(g.TRIANGLES,6,g.UNSIGNED_SHORT,0)});let O,C,X,z,M;const Y=new S(_,y),G=new S(_,U),V=new S(_,F),H=new S(_,L),W=new S(_,w),k=new S(_,P),j=new S(_,b),K=new S(_,I),q=new S(_,B),J=new class{constructor(e,t){this.vertexShader=e,this.fragmentShaderSource=t,this.programs=[],this.activeProgram=null,this.uniforms=[]}setKeywords(e){let t=0;for(let n=0;n<e.length;n++)t+=ve(e[n]);let r=this.programs[t];if(null==r){let n=A(g.FRAGMENT_SHADER,this.fragmentShaderSource,e);r=p(this.vertexShader,n),this.programs[t]=r}r!==this.activeProgram&&(this.uniforms=D(r),this.activeProgram=r)}bind(){g.useProgram(this.activeProgram)}}(_,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          #ifdef SHADING\n              vec3 lc = texture2D(uTexture, vL).rgb;\n              vec3 rc = texture2D(uTexture, vR).rgb;\n              vec3 tc = texture2D(uTexture, vT).rgb;\n              vec3 bc = texture2D(uTexture, vB).rgb;\n\n              float dx = length(rc) - length(lc);\n              float dy = length(tc) - length(bc);\n\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n              vec3 l = vec3(0.0, 0.0, 1.0);\n\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n              c *= diffuse;\n          #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n    ");function Q(){let e=le(t.SIM_RESOLUTION),r=le(t.DYE_RESOLUTION);const n=x.halfFloatTexType,i=x.formatRGBA,o=x.formatRG,a=x.formatR,u=x.supportLinearFiltering?g.LINEAR:g.NEAREST;g.disable(g.BLEND),O=O?ee(O,r.width,r.height,i.internalFormat,i.format,n,u):$(r.width,r.height,i.internalFormat,i.format,n,u),C=C?ee(C,e.width,e.height,o.internalFormat,o.format,n,u):$(e.width,e.height,o.internalFormat,o.format,n,u),X=Z(e.width,e.height,a.internalFormat,a.format,n,g.NEAREST),z=Z(e.width,e.height,a.internalFormat,a.format,n,g.NEAREST),M=$(e.width,e.height,a.internalFormat,a.format,n,g.NEAREST)}function Z(e,t,r,n,i,o){g.activeTexture(g.TEXTURE0);let a=g.createTexture();g.bindTexture(g.TEXTURE_2D,a),g.texParameteri(g.TEXTURE_2D,g.TEXTURE_MIN_FILTER,o),g.texParameteri(g.TEXTURE_2D,g.TEXTURE_MAG_FILTER,o),g.texParameteri(g.TEXTURE_2D,g.TEXTURE_WRAP_S,g.CLAMP_TO_EDGE),g.texParameteri(g.TEXTURE_2D,g.TEXTURE_WRAP_T,g.CLAMP_TO_EDGE),g.texImage2D(g.TEXTURE_2D,0,r,e,t,0,n,i,null);let u=g.createFramebuffer();return g.bindFramebuffer(g.FRAMEBUFFER,u),g.framebufferTexture2D(g.FRAMEBUFFER,g.COLOR_ATTACHMENT0,g.TEXTURE_2D,a,0),g.viewport(0,0,e,t),g.clear(g.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:t,texelSizeX:1/e,texelSizeY:1/t,attach:e=>(g.activeTexture(g.TEXTURE0+e),g.bindTexture(g.TEXTURE_2D,a),e)}}function $(e,t,r,n,i,o){let a=Z(e,t,r,n,i,o),u=Z(e,t,r,n,i,o);return{width:e,height:t,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap(){let e=a;a=u,u=e}}}function ee(e,t,r,n,i,o,a){return e.width===t&&e.height===r||(e.read=function(e,t,r,n,i,o,a){let u=Z(t,r,n,i,o,a);return Y.bind(),g.uniform1i(Y.uniforms.uTexture,e.attach(0)),N(u),u}(e.read,t,r,n,i,o,a),e.write=Z(t,r,n,i,o,a),e.width=t,e.height=r,e.texelSizeX=1/t,e.texelSizeY=1/r),e}!function(){let e=[];t.SHADING&&e.push("SHADING"),J.setKeywords(e)}(),Q();let te=Date.now(),re=0;function ne(){const r=function(){let e=Date.now(),t=(e-te)/1e3;return t=Math.min(t,.016666),te=e,t}();var n;(function(){let t=fe(e.clientWidth),r=fe(e.clientHeight);if(e.width!==t||e.height!==r)return e.width=t,e.height=r,!0;return!1})()&&Q(),function(e){re+=e*t.COLOR_UPDATE_SPEED,re>=1&&(re=(re-(r=0))%(1-r)+r,E.forEach((e=>{e.color=ce()})));var r}(r),E.forEach((e=>{e.moved&&(e.moved=!1,function(e){let r=e.deltaX*t.SPLAT_FORCE,n=e.deltaY*t.SPLAT_FORCE;ie(e.texcoordX,e.texcoordY,r,n,e.color)}(e))})),function(e){g.disable(g.BLEND),k.bind(),g.uniform2f(k.uniforms.texelSize,C.texelSizeX,C.texelSizeY),g.uniform1i(k.uniforms.uVelocity,C.read.attach(0)),N(z),j.bind(),g.uniform2f(j.uniforms.texelSize,C.texelSizeX,C.texelSizeY),g.uniform1i(j.uniforms.uVelocity,C.read.attach(0)),g.uniform1i(j.uniforms.uCurl,z.attach(1)),g.uniform1f(j.uniforms.curl,t.CURL),g.uniform1f(j.uniforms.dt,e),N(C.write),C.swap(),W.bind(),g.uniform2f(W.uniforms.texelSize,C.texelSizeX,C.texelSizeY),g.uniform1i(W.uniforms.uVelocity,C.read.attach(0)),N(X),G.bind(),g.uniform1i(G.uniforms.uTexture,M.read.attach(0)),g.uniform1f(G.uniforms.value,t.PRESSURE),N(M.write),M.swap(),K.bind(),g.uniform2f(K.uniforms.texelSize,C.texelSizeX,C.texelSizeY),g.uniform1i(K.uniforms.uDivergence,X.attach(0));for(let n=0;n<t.PRESSURE_ITERATIONS;n++)g.uniform1i(K.uniforms.uPressure,M.read.attach(1)),N(M.write),M.swap();q.bind(),g.uniform2f(q.uniforms.texelSize,C.texelSizeX,C.texelSizeY),g.uniform1i(q.uniforms.uPressure,M.read.attach(0)),g.uniform1i(q.uniforms.uVelocity,C.read.attach(1)),N(C.write),C.swap(),H.bind(),g.uniform2f(H.uniforms.texelSize,C.texelSizeX,C.texelSizeY),x.supportLinearFiltering||g.uniform2f(H.uniforms.dyeTexelSize,C.texelSizeX,C.texelSizeY);let r=C.read.attach(0);g.uniform1i(H.uniforms.uVelocity,r),g.uniform1i(H.uniforms.uSource,r),g.uniform1f(H.uniforms.dt,e),g.uniform1f(H.uniforms.dissipation,t.VELOCITY_DISSIPATION),N(C.write),C.swap(),x.supportLinearFiltering||g.uniform2f(H.uniforms.dyeTexelSize,O.texelSizeX,O.texelSizeY);g.uniform1i(H.uniforms.uVelocity,C.read.attach(0)),g.uniform1i(H.uniforms.uSource,O.read.attach(1)),g.uniform1f(H.uniforms.dissipation,t.DENSITY_DISSIPATION),N(O.write),O.swap()}(r),n=null,g.blendFunc(g.ONE,g.ONE_MINUS_SRC_ALPHA),g.enable(g.BLEND),function(e){let r=g.drawingBufferWidth,n=g.drawingBufferHeight;J.bind(),t.SHADING&&g.uniform2f(J.uniforms.texelSize,1/r,1/n),g.uniform1i(J.uniforms.uTexture,O.read.attach(0)),N(e)}(n),requestAnimationFrame(ne)}function ie(r,n,i,o,a){V.bind(),g.uniform1i(V.uniforms.uTarget,C.read.attach(0)),g.uniform1f(V.uniforms.aspectRatio,e.width/e.height),g.uniform2f(V.uniforms.point,r,n),g.uniform3f(V.uniforms.color,i,o,0),g.uniform1f(V.uniforms.radius,function(t){let r=e.width/e.height;r>1&&(t*=r);return t}(t.SPLAT_RADIUS/100)),N(C.write),C.swap(),g.uniform1i(V.uniforms.uTarget,O.read.attach(0)),g.uniform3f(V.uniforms.color,a.r,a.g,a.b),N(O.write),O.swap()}function oe(t,r,n,i){t.id=r,t.down=!0,t.moved=!1,t.texcoordX=n/e.width,t.texcoordY=1-i/e.height,t.prevTexcoordX=t.texcoordX,t.prevTexcoordY=t.texcoordY,t.deltaX=0,t.deltaY=0,t.color=ce()}function ae(t,r,n,i){t.prevTexcoordX=t.texcoordX,t.prevTexcoordY=t.texcoordY,t.texcoordX=r/e.width,t.texcoordY=1-n/e.height,t.deltaX=function(t){let r=e.width/e.height;r<1&&(t*=r);return t}(t.texcoordX-t.prevTexcoordX),t.deltaY=function(t){let r=e.width/e.height;r>1&&(t/=r);return t}(t.texcoordY-t.prevTexcoordY),t.moved=Math.abs(t.deltaX)>0||Math.abs(t.deltaY)>0,t.color=i}function ue(e){e.down=!1}function ce(){let e=function(e,t,r){let n,i,o,a,u,c,l,f;switch(a=Math.floor(6*e),u=6*e-a,c=r*(1-t),l=r*(1-u*t),f=r*(1-(1-u)*t),a%6){case 0:n=r,i=f,o=c;break;case 1:n=l,i=r,o=c;break;case 2:n=c,i=r,o=f;break;case 3:n=c,i=l,o=r;break;case 4:n=f,i=c,o=r;break;case 5:n=r,i=c,o=l}return{r:n,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function le(e){let t=g.drawingBufferWidth/g.drawingBufferHeight;t<1&&(t=1/t);const r=Math.round(e),n=Math.round(e*t);return g.drawingBufferWidth>g.drawingBufferHeight?{width:n,height:r}:{width:r,height:n}}function fe(e){const t=window.devicePixelRatio||1;return Math.floor(e*t)}function ve(e){if(0===e.length)return 0;let t=0;for(let r=0;r<e.length;r++)t=(t<<5)-t+e.charCodeAt(r),t|=0;return t}window.addEventListener("mousedown",(e=>{let t=E[0];oe(t,-1,fe(e.clientX),fe(e.clientY)),function(e){const t=ce();t.r*=10,t.g*=10,t.b*=10;let r=10*(Math.random()-.5),n=30*(Math.random()-.5);ie(e.texcoordX,e.texcoordY,r,n,t)}(t)})),document.body.addEventListener("mousemove",(function e(t){let r=E[0],n=fe(t.clientX),i=fe(t.clientY),o=ce();ne(),ae(r,n,i,o),document.body.removeEventListener("mousemove",e)})),window.addEventListener("mousemove",(e=>{let t=E[0];ae(t,fe(e.clientX),fe(e.clientY),t.color)})),document.body.addEventListener("touchstart",(function e(t){const r=t.targetTouches;let n=E[0];for(let i=0;i<r.length;i++){let e=fe(r[i].clientX),t=fe(r[i].clientY);ne(),oe(n,r[i].identifier,e,t)}document.body.removeEventListener("touchstart",e)})),window.addEventListener("touchstart",(e=>{const t=e.targetTouches;let r=E[0];for(let n=0;n<t.length;n++){let e=fe(t[n].clientX),i=fe(t[n].clientY);oe(r,t[n].identifier,e,i)}})),window.addEventListener("touchmove",(e=>{const t=e.targetTouches;let r=E[0];for(let n=0;n<t.length;n++){ae(r,fe(t[n].clientX),fe(t[n].clientY),r.color)}}),!1),window.addEventListener("touchend",(e=>{const t=e.changedTouches;let r=E[0];for(let n=0;n<t.length;n++)ue(r)})),ne()}),[r,n,i,o,a,u,c,l,f,v,s,m,d,h]),e.jsx("div",{className:"fixed top-0 left-0 z-50 pointer-events-none",children:e.jsx("canvas",{ref:T,id:"fluid",className:"w-screen h-screen"})})}export{r as S};
